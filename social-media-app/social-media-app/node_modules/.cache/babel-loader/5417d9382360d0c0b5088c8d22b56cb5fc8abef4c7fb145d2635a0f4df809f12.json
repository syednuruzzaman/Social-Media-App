{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import Home from'./pages/Home';import Login from'./pages/Login';import Register from'./pages/Register';// Auth context types\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(()=>{// Try to get user from localStorage (token or user info)\nreturn localStorage.getItem('token');});const login=token=>{setUser(token);localStorage.setItem('token',token);};const logout=()=>{setUser(null);localStorage.removeItem('token');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context)throw new Error('useAuth must be used within an AuthProvider');return context;};// PrivateRoute component\nconst PrivateRoute=_ref2=>{let{children}=_ref2;const{user}=useAuth();return user?/*#__PURE__*/_jsx(_Fragment,{children:children}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};const App=()=>/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(Home,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})})]})})});export default App;","map":{"version":3,"names":["React","createContext","useContext","useState","BrowserRouter","Router","Routes","Route","Navigate","Home","Login","Register","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","localStorage","getItem","login","token","setItem","logout","removeItem","Provider","value","useAuth","context","Error","PrivateRoute","_ref2","to","replace","App","path","element"],"sources":["C:/Users/syed/AppData/Local/NewSocialMedia/social-media-app/social-media-app/src/App.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\n\n// Auth context types\ninterface AuthContextType {\n  user: string | null;\n  login: (token: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<string | null>(() => {\n    // Try to get user from localStorage (token or user info)\n    return localStorage.getItem('token');\n  });\n\n  const login = (token: string) => {\n    setUser(token);\n    localStorage.setItem('token', token);\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n};\n\n// PrivateRoute component\nconst PrivateRoute: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const { user } = useAuth();\n  return user ? <>{children}</> : <Navigate to=\"/login\" replace />;\n};\n\nconst App: React.FC = () => (\n  <AuthProvider>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <PrivateRoute>\n            <Home />\n          </PrivateRoute>\n        } />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n      </Routes>\n    </Router>\n  </AuthProvider>\n);\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAC7E,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOA,KAAM,CAAAC,WAAW,cAAGjB,aAAa,CAA8BkB,SAAS,CAAC,CAEzE,KAAM,CAAAC,YAA+C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACnE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGrB,QAAQ,CAAgB,IAAM,CACpD;AACA,MAAO,CAAAsB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACtC,CAAC,CAAC,CAEF,KAAM,CAAAC,KAAK,CAAIC,KAAa,EAAK,CAC/BJ,OAAO,CAACI,KAAK,CAAC,CACdH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAED,KAAK,CAAC,CACtC,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBN,OAAO,CAAC,IAAI,CAAC,CACbC,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAED,mBACElB,IAAA,CAACK,WAAW,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAEV,IAAI,CAAEI,KAAK,CAAEG,MAAO,CAAE,CAAAR,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAY,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGjC,UAAU,CAACgB,WAAW,CAAC,CACvC,GAAI,CAACiB,OAAO,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAC5E,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED;AACA,KAAM,CAAAE,YAA+C,CAAGC,KAAA,EAAkB,IAAjB,CAAEhB,QAAS,CAAC,CAAAgB,KAAA,CACnE,KAAM,CAAEf,IAAK,CAAC,CAAGW,OAAO,CAAC,CAAC,CAC1B,MAAO,CAAAX,IAAI,cAAGV,IAAA,CAAAE,SAAA,EAAAO,QAAA,CAAGA,QAAQ,CAAG,CAAC,cAAGT,IAAA,CAACL,QAAQ,EAAC+B,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CAClE,CAAC,CAED,KAAM,CAAAC,GAAa,CAAGA,CAAA,gBACpB5B,IAAA,CAACO,YAAY,EAAAE,QAAA,cACXT,IAAA,CAACR,MAAM,EAAAiB,QAAA,cACLL,KAAA,CAACX,MAAM,EAAAgB,QAAA,eACLT,IAAA,CAACN,KAAK,EAACmC,IAAI,CAAC,GAAG,CAACC,OAAO,cACrB9B,IAAA,CAACwB,YAAY,EAAAf,QAAA,cACXT,IAAA,CAACJ,IAAI,GAAE,CAAC,CACI,CACf,CAAE,CAAC,cACJI,IAAA,CAACN,KAAK,EAACmC,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAE9B,IAAA,CAACH,KAAK,GAAE,CAAE,CAAE,CAAC,cAC3CG,IAAA,CAACN,KAAK,EAACmC,IAAI,CAAC,WAAW,CAACC,OAAO,cAAE9B,IAAA,CAACF,QAAQ,GAAE,CAAE,CAAE,CAAC,EAC3C,CAAC,CACH,CAAC,CACG,CACf,CAED,cAAe,CAAA8B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}