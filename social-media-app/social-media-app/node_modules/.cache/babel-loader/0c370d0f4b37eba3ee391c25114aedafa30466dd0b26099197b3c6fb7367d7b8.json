{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syed\\\\AppData\\\\Local\\\\NewSocialMedia\\\\social-media-app\\\\social-media-app\\\\src\\\\components\\\\Feed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function fetchPosts() {\n  // Replace with your actual API call logic\n  return [{\n    id: 1,\n    title: 'Author 1',\n    content: 'Post content 1'\n  }, {\n    id: 2,\n    title: 'Author 2',\n    content: 'Post content 2'\n  }];\n}\nconst Feed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadPosts = async () => {\n      const fetchedPosts = await fetchPosts();\n      setPosts(fetchedPosts);\n      setLoading(false);\n    };\n    loadPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      content: post.content,\n      author: post.title // Assuming title is the author's name\n      ,\n      onLike: () => console.log(`Liked post ${post.id}`),\n      onComment: comment => console.log(`Commented on post ${post.id}: ${comment}`)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","fetchPosts","id","title","content","Feed","_s","posts","setPosts","loading","setLoading","loadPosts","fetchedPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","author","onLike","console","log","onComment","comment","_c","$RefreshReg$"],"sources":["C:/Users/syed/AppData/Local/NewSocialMedia/social-media-app/social-media-app/src/components/Feed.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Post from './Post';\n\n\ntype PostType = {\n    id: number;\n    title: string;\n    content: string;\n    // other fields...\n};\n\nexport async function fetchPosts() {\n    // Replace with your actual API call logic\n    return [\n        { id: 1, title: 'Author 1', content: 'Post content 1' },\n        { id: 2, title: 'Author 2', content: 'Post content 2' }\n    ];\n}\n\nconst Feed: React.FC = () => {\n    const [posts, setPosts] = useState<PostType[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const loadPosts = async () => {\n            const fetchedPosts = await fetchPosts();\n            setPosts(fetchedPosts as PostType[]);\n            setLoading(false);\n        };\n\n        loadPosts();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            \n            {posts.map((post) => (\n                <Post\n                    key={post.id}\n                    content={post.content}\n                    author={post.title} // Assuming title is the author's name\n                    onLike={() => console.log(`Liked post ${post.id}`)}\n                    onComment={(comment) => console.log(`Commented on post ${post.id}: ${comment}`)}\n                />\n            ))}\n            \n        </div>\n    );\n};\n\nexport default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,OAAO,eAAeC,UAAUA,CAAA,EAAG;EAC/B;EACA,OAAO,CACH;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,OAAO,EAAE;EAAiB,CAAC,EACvD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,OAAO,EAAE;EAAiB,CAAC,CAC1D;AACL;AAEA,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAa,EAAE,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAU,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,YAAY,GAAG,MAAMX,UAAU,CAAC,CAAC;MACvCO,QAAQ,CAACI,YAA0B,CAAC;MACpCF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACT,oBAAOT,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIjB,OAAA;IAAAa,QAAA,EAEKN,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACZnB,OAAA,CAACF,IAAI;MAEDM,OAAO,EAAEe,IAAI,CAACf,OAAQ;MACtBgB,MAAM,EAAED,IAAI,CAAChB,KAAM,CAAC;MAAA;MACpBkB,MAAM,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,cAAcJ,IAAI,CAACjB,EAAE,EAAE,CAAE;MACnDsB,SAAS,EAAGC,OAAO,IAAKH,OAAO,CAACC,GAAG,CAAC,qBAAqBJ,IAAI,CAACjB,EAAE,KAAKuB,OAAO,EAAE;IAAE,GAJ3EN,IAAI,CAACjB,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKf,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAACX,EAAA,CAjCID,IAAc;AAAAqB,EAAA,GAAdrB,IAAc;AAmCpB,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}